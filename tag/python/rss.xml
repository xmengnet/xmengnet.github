<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>心夢博客 • Posts by &#34;python&#34; tag</title>
        <link>https://xmengnet.github.io</link>
        <description></description>
        <language>en</language>
        <pubDate>Mon, 22 Mar 2021 19:35:29 +0800</pubDate>
        <lastBuildDate>Mon, 22 Mar 2021 19:35:29 +0800</lastBuildDate>
        <category>Linux</category>
        <category>Python</category>
        <category>windows</category>
        <category>美文</category>
        <item>
            <guid isPermalink="true">https://xmengnet.github.io/2021/03/22/%E4%BD%BF%E7%94%A8systemd-timer%E5%AE%9A%E6%97%B6%E6%89%A7%E8%A1%8CPython%E8%84%9A%E6%9C%AC%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8C%E7%BD%91%E7%AB%99/</guid>
            <title>使用systemd.timer定时执行Python脚本备份数据库和网站</title>
            <link>https://xmengnet.github.io/2021/03/22/%E4%BD%BF%E7%94%A8systemd-timer%E5%AE%9A%E6%97%B6%E6%89%A7%E8%A1%8CPython%E8%84%9A%E6%9C%AC%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8C%E7%BD%91%E7%AB%99/</link>
            <category>Python</category>
            <pubDate>Mon, 22 Mar 2021 19:35:29 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;写在前面&#34;&gt;&lt;a href=&#34;#写在前面&#34; class=&#34;headerlink&#34; title=&#34;写在前面&#34;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;上一篇写了如何使用&lt;code&gt;Arch&lt;/code&gt;搭建&lt;code&gt;Lnmp&lt;/code&gt;环境，但是数据不够安全，这一篇教程使用&lt;code&gt;Systemd.timer&lt;/code&gt;定时器定时执行备份脚本，并且使用钉钉机器人每天定时推送备份信息！&lt;/p&gt;
&lt;h1 id=&#34;1、脚本编写&#34;&gt;&lt;a href=&#34;#1、脚本编写&#34; class=&#34;headerlink&#34; title=&#34;1、脚本编写&#34;&gt;&lt;/a&gt;1、脚本编写&lt;/h1&gt;&lt;p&gt;我已经参考网上写好了备份数据库和网站的代码，如下：&lt;/p&gt;
&lt;figure class=&#34;highlight nix&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nix&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# coding=utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# filename : backup_ver1.py&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;import&lt;/span&gt; datetime&lt;br&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;import&lt;/span&gt; json&lt;br&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;import&lt;/span&gt; os&lt;br&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;import&lt;/span&gt; requests&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; not os.path.exists(&amp;#x27;/srv/backup/mysqldb_backup/&amp;#x27;):&lt;br&gt;    os.mkdir(&amp;#x27;/srv/backup/mysqldb_backup/&amp;#x27;)&lt;br&gt;os.chdir(&amp;#x27;/srv/backup/mysqldb_backup/&amp;#x27;)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;today&lt;/span&gt; = datetime.date.today()&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;yesterday&lt;/span&gt; = today - datetime.timedelta(&lt;span class=&#34;hljs-attr&#34;&gt;days=5)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 数据库设置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;mysql_today_file_name&lt;/span&gt; = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;/srv/backup/mysqldb_backup/mysql-&amp;quot;&lt;/span&gt; + str(today) + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;.sql&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;mysql_yesterday_file_name&lt;/span&gt; = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;/srv/backup/mysqldb_backup/mysql-&amp;quot;&lt;/span&gt; + str(yesterday) + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;.sql&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 执行mysql代码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;mysql_response_code&lt;/span&gt; = os.system(&lt;br&gt;    &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;mysqldump -u blog -ppasswd blog &amp;gt; /srv/backup/mysqldb_backup/mysql-`date +%Y-%m-%d`.sql&amp;quot;&lt;/span&gt;)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;mysql_file_size&lt;/span&gt; = int(os.path.getsize(mysql_today_file_name)) / &lt;span class=&#34;hljs-number&#34;&gt;1024&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;mysql_response_code&lt;/span&gt; == &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;:&lt;br&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;mysql_text&lt;/span&gt; = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;#### Message:\n\n &amp;gt; - MySqlDB Backup Completed!\n\n &amp;gt; - SQL_file_size:&amp;quot;&lt;/span&gt; + str(&lt;br&gt;        round(mysql_file_size, &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;)) + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;KB\n\n&amp;quot;&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; os.path.exists(mysql_yesterday_file_name):&lt;br&gt;        os.remove(mysql_yesterday_file_name)&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;:&lt;br&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;mysql_text&lt;/span&gt; = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;#### Message:\n\n &amp;gt; - MySqlDB Backup Error!\n\n &amp;gt; - Please check the server program.\n\n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 网站目录备份&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 设置备份的目录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;source&lt;/span&gt; = &amp;#x27;/srv/http&amp;#x27;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; not os.path.exists(&amp;#x27;/srv/backup/http_backup/&amp;#x27;):&lt;br&gt;    os.mkdir(&amp;#x27;/srv/backup/http_backup/&amp;#x27;)&lt;br&gt;os.chdir(&amp;#x27;/srv/backup/http_backup/&amp;#x27;)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 数据库设置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;http_today_file_name&lt;/span&gt; = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;/srv/backup/http_backup/http-&amp;quot;&lt;/span&gt; + str(today) + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;.tar&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;http_yesterday_file_name&lt;/span&gt; = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;/srv/backup/http_backup/http-&amp;quot;&lt;/span&gt; + str(yesterday) + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;.tar&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;http_file_size&lt;/span&gt; = int(os.path.getsize(http_today_file_name)) / &lt;span class=&#34;hljs-number&#34;&gt;1024&lt;/span&gt;**&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# print(tar_command)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;tar_command&lt;/span&gt; == &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;:&lt;br&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;http_text&lt;/span&gt; = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;#### Message:\n\n &amp;gt; - HTTP FILE Backup Completed!\n\n &amp;gt; - HTTP_file_size:&amp;quot;&lt;/span&gt; + str(&lt;br&gt;        round(http_file_size, &lt;span class=&#34;hljs-number&#34;&gt;4&lt;/span&gt;)) + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;MB&amp;quot;&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; os.path.exists(http_yesterday_file_name):&lt;br&gt;        os.remove(http_yesterday_file_name)&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;:&lt;br&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;http_text&lt;/span&gt; = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;#### Message:\n\n &amp;gt; - HTTP FILE Backup Error!\n\n &amp;gt; - Please check the server program.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;#钉钉机器人api&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;dingding_url&lt;/span&gt; = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;https://oapi.dingtalk.com/robot/send?access_token=xxxxxxxx&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;headers&lt;/span&gt; = &amp;#123;&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Content-Type&amp;quot;&lt;/span&gt;: &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;application/json; charset=utf-8&amp;quot;&lt;/span&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;post_data&lt;/span&gt; = &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;msgtype&amp;quot;&lt;/span&gt;: &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;markdown&amp;quot;&lt;/span&gt;,&lt;br&gt;    &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;markdown&amp;quot;&lt;/span&gt;: &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;: &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;HTTP FILE Backup Message&amp;quot;&lt;/span&gt;,&lt;br&gt;        &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;text&amp;quot;&lt;/span&gt;: mysql_text + http_text&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-attr&#34;&gt;info&lt;/span&gt; = requests.post(dingding_url, &lt;span class=&#34;hljs-attr&#34;&gt;headers=headers,&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;data=json.dumps(post_data))&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;自动备份数据库和网站，备份超过五次后自动删除最早的数据。&lt;br&gt;需要自己申请钉钉机器人，在钉钉网页版就可以申请。&lt;br&gt;参考：&lt;a href=&#34;https://www.jianshu.com/p/3382cf349a4f&#34;&gt;https://www.jianshu.com/p/3382cf349a4f&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;2、设置定时发布&#34;&gt;&lt;a href=&#34;#2、设置定时发布&#34; class=&#34;headerlink&#34; title=&#34;2、设置定时发布&#34;&gt;&lt;/a&gt;2、设置定时发布&lt;/h1&gt;&lt;h2 id=&#34;定时器单元&#34;&gt;&lt;a href=&#34;#定时器单元&#34; class=&#34;headerlink&#34; title=&#34;定时器单元&#34;&gt;&lt;/a&gt;定时器单元&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Timers&lt;/code&gt; 是以 &lt;code&gt;.timer &lt;/code&gt;为后缀的 &lt;code&gt;systemd&lt;/code&gt; 单元文件。&lt;code&gt;Timers&lt;/code&gt; 和其他单元配置文件是类似的，它通过相同的路径加载，不同的是包含了 &lt;code&gt;[Timer]&lt;/code&gt; 部分。 &lt;code&gt;[Timer]&lt;/code&gt; 部分定义了何时以及如何激活定时事件。&lt;code&gt;Timers&lt;/code&gt; 可以被定义成以下两种类型：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;单调定时器 即从一个时间点过一段时间后激活定时任务。所有的单调计时器都遵循如下形式： &lt;code&gt;OnTypeSec=&lt;/code&gt;。 &lt;code&gt;OnBootSec&lt;/code&gt; 和 &lt;code&gt;OnActiveSec&lt;/code&gt; 是常用的单调定时器。&lt;/li&gt;
&lt;li&gt;实时定时器 (亦称”挂钟定时器”) 通过日历事件激活（类似于 &lt;code&gt;cronjobs &lt;/code&gt;）定时任务。 使用 &lt;code&gt;OnCalender=&lt;/code&gt; 来定义实时定时器。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;服务单元&#34;&gt;&lt;a href=&#34;#服务单元&#34; class=&#34;headerlink&#34; title=&#34;服务单元&#34;&gt;&lt;/a&gt;服务单元&lt;/h2&gt;&lt;p&gt;每个 &lt;code&gt;.timer&lt;/code&gt; 文件所在目录都得有一个对应的 &lt;code&gt;.service&lt;/code&gt; 文件（如 &lt;code&gt;foo.timer&lt;/code&gt; 和 &lt;code&gt;foo.service&lt;/code&gt;）。&lt;code&gt;.timer&lt;/code&gt; 用于激活并控制 &lt;code&gt;.service&lt;/code&gt; 文件。 &lt;code&gt;.service&lt;/code&gt; 文件中不需要包含 &lt;code&gt;[Install]&lt;/code&gt; 部分，因为这由 &lt;em&gt;timer&lt;/em&gt; 单元接管。必要时通过在定时器的 &lt;code&gt;[Timer]&lt;/code&gt; 部分指定 &lt;code&gt;Unit=&lt;/code&gt; 选项来控制一个与定时器不同名的服务单元。 &lt;/p&gt;
&lt;p&gt;摘抄自：&lt;a href=&#34;https://wiki.archlinux.org/index.php/Systemd_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)/Timers_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)&#34;&gt;ArchLinuxWiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;简单来说就是需要先自己建立一个&lt;code&gt;service&lt;/code&gt;，然后使用&lt;code&gt;timer&lt;/code&gt;定时执行，下面是我的&lt;code&gt;service&lt;/code&gt;和&lt;code&gt;timer&lt;/code&gt;代码：&lt;/p&gt;
&lt;figure class=&#34;highlight gradle&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs gradle&#34;&gt;vim &lt;span class=&#34;hljs-regexp&#34;&gt;/usr/&lt;/span&gt;lib&lt;span class=&#34;hljs-regexp&#34;&gt;/systemd/&lt;/span&gt;system/backup.service&lt;br&gt;&lt;br&gt;[Unit]&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;Description&lt;/span&gt;=Backup http files and mariadb&lt;br&gt;&lt;br&gt;[Service]&lt;br&gt;ExecStart=&lt;span class=&#34;hljs-regexp&#34;&gt;/bin/&lt;/span&gt;python &lt;span class=&#34;hljs-regexp&#34;&gt;/srv/&lt;/span&gt;scripts/backup_ver1.py&lt;br&gt;ExecReload=&lt;span class=&#34;hljs-regexp&#34;&gt;/bin/&lt;/span&gt;python &lt;span class=&#34;hljs-regexp&#34;&gt;/srv/&lt;/span&gt;scripts/backup_ver1.py&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;可以看到，这个 Service 单元文件分成两个部分。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[Unit]&lt;/code&gt;部分介绍本单元的基本信息（即元数据），&lt;code&gt;Description&lt;/code&gt;字段给出这个单元的简单介绍（名字叫做&lt;code&gt;Backup&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[Service]&lt;/code&gt;部分用来定制行为，Systemd 提供许多字段。&lt;/p&gt;
&lt;figure class=&#34;highlight crmsh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs crmsh&#34;&gt;ExecStart：systemctl &lt;span class=&#34;hljs-literal&#34;&gt;start&lt;/span&gt;所要执行的命令&lt;br&gt;ExecStop：systemctl &lt;span class=&#34;hljs-literal&#34;&gt;stop&lt;/span&gt;所要执行的命令&lt;br&gt;ExecReload：systemctl reload所要执行的命令&lt;br&gt;ExecStartPre：ExecStart之前自动执行的命令&lt;br&gt;ExecStartPost：ExecStart之后自动执行的命令&lt;br&gt;ExecStopPost：ExecStop之后自动执行的命令&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Timer部分&#34;&gt;&lt;a href=&#34;#Timer部分&#34; class=&#34;headerlink&#34; title=&#34;Timer部分&#34;&gt;&lt;/a&gt;Timer部分&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Service&lt;/code&gt; 单元只是定义了如何执行任务，要定时执行这个 &lt;code&gt;Service&lt;/code&gt;，还必须定义 &lt;code&gt;Timer &lt;/code&gt;单元。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;timer&lt;/code&gt;代码：&lt;/p&gt;
&lt;figure class=&#34;highlight routeros&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs routeros&#34;&gt;vim /usr/lib/systemd/system/backup.timer&lt;br&gt;&lt;br&gt;[Unit]&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Description&lt;/span&gt;=Backup http files &lt;span class=&#34;hljs-keyword&#34;&gt;and&lt;/span&gt; mariadb&lt;br&gt;&lt;br&gt;[Timer]&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;OnCalendar&lt;/span&gt;=*-*-* 02:00:00&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Unit&lt;/span&gt;=backup.service&lt;br&gt;&lt;br&gt;[Install]&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;WantedBy&lt;/span&gt;=multi-user.target&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这个 Timer 单元文件分成几个部分。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[Unit]&lt;/code&gt;部分定义元数据。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[Timer]&lt;/code&gt;部分定制定时器。&lt;code&gt;Systemd&lt;/code&gt; 提供以下一些字段。&lt;/p&gt;
&lt;figure class=&#34;highlight apache&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs apache&#34;&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;OnActiveSec&lt;/span&gt;：定时器生效后，多少时间开始执行任务&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;OnBootSec&lt;/span&gt;：系统启动后，多少时间开始执行任务&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;OnStartupSec&lt;/span&gt;：Systemd 进程启动后，多少时间开始执行任务&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;OnUnitActiveSec&lt;/span&gt;：该单元上次执行后，等多少时间再次执行&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;OnUnitInactiveSec&lt;/span&gt;： 定时器上次关闭后多少时间，再次执行&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;OnCalendar&lt;/span&gt;：基于绝对时间，而不是相对时间执行&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;AccuracySec&lt;/span&gt;：如果因为各种原因，任务必须推迟执行，推迟的最大秒数，默认是&lt;span class=&#34;hljs-number&#34;&gt;60&lt;/span&gt;秒&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Unit&lt;/span&gt;：真正要执行的任务，默认是同名的带有.service后缀的单元&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Persistent&lt;/span&gt;：如果设置了该字段，即使定时器到时没有启动，也会自动执行相应的单元&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;WakeSystem&lt;/span&gt;：如果系统休眠，是否自动唤醒系统&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面的脚本里面，&lt;code&gt;OnCalendar=*-*-* 02:00:00&lt;/code&gt; 表示每天凌晨两点执行一次任务。其他的写法还有&lt;code&gt;OnUnitActiveSec=Mon *-*-* 02:00:00&lt;/code&gt;表示每周一凌晨两点执行。&lt;/p&gt;
&lt;h2 id=&#34;Install-和-target&#34;&gt;&lt;a href=&#34;#Install-和-target&#34; class=&#34;headerlink&#34; title=&#34;[Install] 和 target&#34;&gt;&lt;/a&gt;[Install] 和 target&lt;/h2&gt;&lt;p&gt;&lt;code&gt;backup.timer&lt;/code&gt;文件里面，还有一个&lt;code&gt;[Install]&lt;/code&gt;部分，定义开机自启动（&lt;code&gt;systemctl enable&lt;/code&gt;）和关闭开机自启动（&lt;code&gt;systemctl disable&lt;/code&gt;）这个单元时，所要执行的命令。&lt;/p&gt;
&lt;p&gt;上面脚本中，&lt;code&gt;[Install]&lt;/code&gt;部分只写了一个字段，即&lt;code&gt;WantedBy=multi-user.target&lt;/code&gt;。它的意思是，如果执行了&lt;code&gt;systemctl enable backup.timer&lt;/code&gt;（只要开机，定时器自动生效），那么该定时器归属于&lt;code&gt;multi-user.target&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;所谓 Target 指的是一组相关进程，有点像 init 进程模式下面的启动级别。启动某个Target 的时候，属于这个 Target 的所有进程都会全部启动。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;multi-user.target&lt;/code&gt;是一个最常用的 Target，意为多用户模式。也就是说，当系统以多用户模式启动时，就会一起启动&lt;code&gt;backup.timer&lt;/code&gt;。它背后的操作其实很简单，执行&lt;code&gt;systemctl enable backup.timer&lt;/code&gt;命令时，就会在&lt;code&gt;multi-user.target.wants&lt;/code&gt;目录里面创建一个符号链接，指向&lt;code&gt;backup.timer&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;定时器相关命令&#34;&gt;&lt;a href=&#34;#定时器相关命令&#34; class=&#34;headerlink&#34; title=&#34;定时器相关命令&#34;&gt;&lt;/a&gt;定时器相关命令&lt;/h2&gt;&lt;figure class=&#34;highlight mipsasm&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs mipsasm&#34;&gt;systemctl start &lt;span class=&#34;hljs-keyword&#34;&gt;backup.timer &lt;/span&gt; &lt;span class=&#34;hljs-comment&#34;&gt;#启动定时器&lt;/span&gt;&lt;br&gt;&lt;br&gt;systemctl status &lt;span class=&#34;hljs-keyword&#34;&gt;backup.timer &lt;/span&gt;&lt;span class=&#34;hljs-comment&#34;&gt;#查看定时器状态&lt;/span&gt;&lt;br&gt;&lt;br&gt;systemctl enable &lt;span class=&#34;hljs-keyword&#34;&gt;backup.timer &lt;/span&gt; &lt;span class=&#34;hljs-comment&#34;&gt;#设置开机自启&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;定时器的操作和&lt;code&gt;service&lt;/code&gt;是一样的，不需要过多介绍。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考链接：&lt;/strong&gt;  &lt;a href=&#34;http://www.ruanyifeng.com/blog/2018/03/systemd-timer.html&#34;&gt;http://www.ruanyifeng.com/blog/2018/03/systemd-timer.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;效果图：&#34;&gt;&lt;a href=&#34;#效果图：&#34; class=&#34;headerlink&#34; title=&#34;效果图：&#34;&gt;&lt;/a&gt;效果图：&lt;/h2&gt;&lt;p&gt;&lt;img  src=&#34;https://i.loli.net/2021/02/08/26utcsbTW73HVDf.jpg&#34;  &gt;&lt;span class=&#34;image-caption&#34;&gt;效果图&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
