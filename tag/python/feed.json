{
    "version": "https://jsonfeed.org/version/1",
    "title": "心夢博客 • All posts by \"python\" tag",
    "description": "",
    "home_page_url": "https://xmengnet.github.io",
    "items": [
        {
            "id": "https://xmengnet.github.io/2021/03/22/%E4%BD%BF%E7%94%A8systemd-timer%E5%AE%9A%E6%97%B6%E6%89%A7%E8%A1%8CPython%E8%84%9A%E6%9C%AC%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8C%E7%BD%91%E7%AB%99/",
            "url": "https://xmengnet.github.io/2021/03/22/%E4%BD%BF%E7%94%A8systemd-timer%E5%AE%9A%E6%97%B6%E6%89%A7%E8%A1%8CPython%E8%84%9A%E6%9C%AC%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8C%E7%BD%91%E7%AB%99/",
            "title": "使用systemd.timer定时执行Python脚本备份数据库和网站",
            "date_published": "2021-03-22T11:35:29.000Z",
            "content_html": "<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>上一篇写了如何使用<code>Arch</code>搭建<code>Lnmp</code>环境，但是数据不够安全，这一篇教程使用<code>Systemd.timer</code>定时器定时执行备份脚本，并且使用钉钉机器人每天定时推送备份信息！</p>\n<h1 id=\"1、脚本编写\"><a href=\"#1、脚本编写\" class=\"headerlink\" title=\"1、脚本编写\"></a>1、脚本编写</h1><p>我已经参考网上写好了备份数据库和网站的代码，如下：</p>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\"><span class=\"hljs-comment\">#!/usr/bin/env python</span><br><span class=\"hljs-comment\"># coding=utf-8</span><br><span class=\"hljs-comment\"># filename : backup_ver1.py</span><br><br><span class=\"hljs-built_in\">import</span> datetime<br><span class=\"hljs-built_in\">import</span> json<br><span class=\"hljs-built_in\">import</span> os<br><span class=\"hljs-built_in\">import</span> requests<br><br><span class=\"hljs-keyword\">if</span> not os.path.exists(&#x27;/srv/backup/mysqldb_backup/&#x27;):<br>    os.mkdir(&#x27;/srv/backup/mysqldb_backup/&#x27;)<br>os.chdir(&#x27;/srv/backup/mysqldb_backup/&#x27;)<br><br><span class=\"hljs-attr\">today</span> = datetime.date.today()<br><span class=\"hljs-attr\">yesterday</span> = today - datetime.timedelta(<span class=\"hljs-attr\">days=5)</span><br><span class=\"hljs-comment\"># 数据库设置</span><br><span class=\"hljs-attr\">mysql_today_file_name</span> = <span class=\"hljs-string\">&quot;/srv/backup/mysqldb_backup/mysql-&quot;</span> + str(today) + <span class=\"hljs-string\">&quot;.sql&quot;</span><br><span class=\"hljs-attr\">mysql_yesterday_file_name</span> = <span class=\"hljs-string\">&quot;/srv/backup/mysqldb_backup/mysql-&quot;</span> + str(yesterday) + <span class=\"hljs-string\">&quot;.sql&quot;</span><br><span class=\"hljs-comment\"># 执行mysql代码</span><br><span class=\"hljs-attr\">mysql_response_code</span> = os.system(<br>    <span class=\"hljs-string\">&quot;mysqldump -u blog -ppasswd blog &gt; /srv/backup/mysqldb_backup/mysql-`date +%Y-%m-%d`.sql&quot;</span>)<br><br><span class=\"hljs-attr\">mysql_file_size</span> = int(os.path.getsize(mysql_today_file_name)) / <span class=\"hljs-number\">1024</span><br><br><span class=\"hljs-keyword\">if</span> <span class=\"hljs-attr\">mysql_response_code</span> == <span class=\"hljs-number\">0</span>:<br>    <span class=\"hljs-attr\">mysql_text</span> = <span class=\"hljs-string\">&quot;#### Message:\\n\\n &gt; - MySqlDB Backup Completed!\\n\\n &gt; - SQL_file_size:&quot;</span> + str(<br>        round(mysql_file_size, <span class=\"hljs-number\">4</span>)) + <span class=\"hljs-string\">&quot;KB\\n\\n&quot;</span><br>    <span class=\"hljs-keyword\">if</span> os.path.exists(mysql_yesterday_file_name):<br>        os.remove(mysql_yesterday_file_name)<br><span class=\"hljs-keyword\">else</span>:<br>    <span class=\"hljs-attr\">mysql_text</span> = <span class=\"hljs-string\">&quot;#### Message:\\n\\n &gt; - MySqlDB Backup Error!\\n\\n &gt; - Please check the server program.\\n\\n&quot;</span><br><br><span class=\"hljs-comment\"># 网站目录备份</span><br><span class=\"hljs-comment\"># 设置备份的目录</span><br><span class=\"hljs-attr\">source</span> = &#x27;/srv/http&#x27;<br><br><span class=\"hljs-keyword\">if</span> not os.path.exists(&#x27;/srv/backup/http_backup/&#x27;):<br>    os.mkdir(&#x27;/srv/backup/http_backup/&#x27;)<br>os.chdir(&#x27;/srv/backup/http_backup/&#x27;)<br><br><span class=\"hljs-comment\"># 数据库设置</span><br><span class=\"hljs-attr\">http_today_file_name</span> = <span class=\"hljs-string\">&quot;/srv/backup/http_backup/http-&quot;</span> + str(today) + <span class=\"hljs-string\">&quot;.tar&quot;</span><br><span class=\"hljs-attr\">http_yesterday_file_name</span> = <span class=\"hljs-string\">&quot;/srv/backup/http_backup/http-&quot;</span> + str(yesterday) + <span class=\"hljs-string\">&quot;.tar&quot;</span><br><br><span class=\"hljs-attr\">http_file_size</span> = int(os.path.getsize(http_today_file_name)) / <span class=\"hljs-number\">1024</span>**<span class=\"hljs-number\">2</span><br><span class=\"hljs-comment\"># print(tar_command)</span><br><span class=\"hljs-keyword\">if</span> <span class=\"hljs-attr\">tar_command</span> == <span class=\"hljs-number\">0</span>:<br>    <span class=\"hljs-attr\">http_text</span> = <span class=\"hljs-string\">&quot;#### Message:\\n\\n &gt; - HTTP FILE Backup Completed!\\n\\n &gt; - HTTP_file_size:&quot;</span> + str(<br>        round(http_file_size, <span class=\"hljs-number\">4</span>)) + <span class=\"hljs-string\">&quot;MB&quot;</span><br>    <span class=\"hljs-keyword\">if</span> os.path.exists(http_yesterday_file_name):<br>        os.remove(http_yesterday_file_name)<br><span class=\"hljs-keyword\">else</span>:<br>    <span class=\"hljs-attr\">http_text</span> = <span class=\"hljs-string\">&quot;#### Message:\\n\\n &gt; - HTTP FILE Backup Error!\\n\\n &gt; - Please check the server program.&quot;</span><br><span class=\"hljs-comment\">#钉钉机器人api</span><br><span class=\"hljs-attr\">dingding_url</span> = <span class=\"hljs-string\">&quot;https://oapi.dingtalk.com/robot/send?access_token=xxxxxxxx&quot;</span><br><span class=\"hljs-attr\">headers</span> = &#123;<span class=\"hljs-string\">&quot;Content-Type&quot;</span>: <span class=\"hljs-string\">&quot;application/json; charset=utf-8&quot;</span>&#125;<br><br><span class=\"hljs-attr\">post_data</span> = &#123;<br>    <span class=\"hljs-string\">&quot;msgtype&quot;</span>: <span class=\"hljs-string\">&quot;markdown&quot;</span>,<br>    <span class=\"hljs-string\">&quot;markdown&quot;</span>: &#123;<br>        <span class=\"hljs-string\">&quot;title&quot;</span>: <span class=\"hljs-string\">&quot;HTTP FILE Backup Message&quot;</span>,<br>        <span class=\"hljs-string\">&quot;text&quot;</span>: mysql_text + http_text<br>    &#125;<br>&#125;<br><br><span class=\"hljs-attr\">info</span> = requests.post(dingding_url, <span class=\"hljs-attr\">headers=headers,</span> <span class=\"hljs-attr\">data=json.dumps(post_data))</span><br><br><br></code></pre></td></tr></table></figure>\n\n<p>自动备份数据库和网站，备份超过五次后自动删除最早的数据。<br>需要自己申请钉钉机器人，在钉钉网页版就可以申请。<br>参考：<a href=\"https://www.jianshu.com/p/3382cf349a4f\">https://www.jianshu.com/p/3382cf349a4f</a></p>\n<h1 id=\"2、设置定时发布\"><a href=\"#2、设置定时发布\" class=\"headerlink\" title=\"2、设置定时发布\"></a>2、设置定时发布</h1><h2 id=\"定时器单元\"><a href=\"#定时器单元\" class=\"headerlink\" title=\"定时器单元\"></a>定时器单元</h2><p><code>Timers</code> 是以 <code>.timer </code>为后缀的 <code>systemd</code> 单元文件。<code>Timers</code> 和其他单元配置文件是类似的，它通过相同的路径加载，不同的是包含了 <code>[Timer]</code> 部分。 <code>[Timer]</code> 部分定义了何时以及如何激活定时事件。<code>Timers</code> 可以被定义成以下两种类型：</p>\n<ol>\n<li>单调定时器 即从一个时间点过一段时间后激活定时任务。所有的单调计时器都遵循如下形式： <code>OnTypeSec=</code>。 <code>OnBootSec</code> 和 <code>OnActiveSec</code> 是常用的单调定时器。</li>\n<li>实时定时器 (亦称”挂钟定时器”) 通过日历事件激活（类似于 <code>cronjobs </code>）定时任务。 使用 <code>OnCalender=</code> 来定义实时定时器。</li>\n</ol>\n<h2 id=\"服务单元\"><a href=\"#服务单元\" class=\"headerlink\" title=\"服务单元\"></a>服务单元</h2><p>每个 <code>.timer</code> 文件所在目录都得有一个对应的 <code>.service</code> 文件（如 <code>foo.timer</code> 和 <code>foo.service</code>）。<code>.timer</code> 用于激活并控制 <code>.service</code> 文件。 <code>.service</code> 文件中不需要包含 <code>[Install]</code> 部分，因为这由 <em>timer</em> 单元接管。必要时通过在定时器的 <code>[Timer]</code> 部分指定 <code>Unit=</code> 选项来控制一个与定时器不同名的服务单元。 </p>\n<p>摘抄自：<a href=\"https://wiki.archlinux.org/index.php/Systemd_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)/Timers_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\">ArchLinuxWiki</a></p>\n<p>简单来说就是需要先自己建立一个<code>service</code>，然后使用<code>timer</code>定时执行，下面是我的<code>service</code>和<code>timer</code>代码：</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gradle\">vim <span class=\"hljs-regexp\">/usr/</span>lib<span class=\"hljs-regexp\">/systemd/</span>system/backup.service<br><br>[Unit]<br><span class=\"hljs-keyword\">Description</span>=Backup http files and mariadb<br><br>[Service]<br>ExecStart=<span class=\"hljs-regexp\">/bin/</span>python <span class=\"hljs-regexp\">/srv/</span>scripts/backup_ver1.py<br>ExecReload=<span class=\"hljs-regexp\">/bin/</span>python <span class=\"hljs-regexp\">/srv/</span>scripts/backup_ver1.py<br><br><br></code></pre></td></tr></table></figure>\n\n<p>可以看到，这个 Service 单元文件分成两个部分。</p>\n<p><code>[Unit]</code>部分介绍本单元的基本信息（即元数据），<code>Description</code>字段给出这个单元的简单介绍（名字叫做<code>Backup</code>）。</p>\n<p><code>[Service]</code>部分用来定制行为，Systemd 提供许多字段。</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">ExecStart：systemctl <span class=\"hljs-literal\">start</span>所要执行的命令<br>ExecStop：systemctl <span class=\"hljs-literal\">stop</span>所要执行的命令<br>ExecReload：systemctl reload所要执行的命令<br>ExecStartPre：ExecStart之前自动执行的命令<br>ExecStartPost：ExecStart之后自动执行的命令<br>ExecStopPost：ExecStop之后自动执行的命令<br><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Timer部分\"><a href=\"#Timer部分\" class=\"headerlink\" title=\"Timer部分\"></a>Timer部分</h2><p><code>Service</code> 单元只是定义了如何执行任务，要定时执行这个 <code>Service</code>，还必须定义 <code>Timer </code>单元。</p>\n<p><code>timer</code>代码：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">vim /usr/lib/systemd/system/backup.timer<br><br>[Unit]<br><span class=\"hljs-attribute\">Description</span>=Backup http files <span class=\"hljs-keyword\">and</span> mariadb<br><br>[Timer]<br><span class=\"hljs-attribute\">OnCalendar</span>=*-*-* 02:00:00<br><span class=\"hljs-attribute\">Unit</span>=backup.service<br><br>[Install]<br><span class=\"hljs-attribute\">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure>\n\n<p>这个 Timer 单元文件分成几个部分。</p>\n<p><code>[Unit]</code>部分定义元数据。</p>\n<p><code>[Timer]</code>部分定制定时器。<code>Systemd</code> 提供以下一些字段。</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">OnActiveSec</span>：定时器生效后，多少时间开始执行任务<br><span class=\"hljs-attribute\">OnBootSec</span>：系统启动后，多少时间开始执行任务<br><span class=\"hljs-attribute\">OnStartupSec</span>：Systemd 进程启动后，多少时间开始执行任务<br><span class=\"hljs-attribute\">OnUnitActiveSec</span>：该单元上次执行后，等多少时间再次执行<br><span class=\"hljs-attribute\">OnUnitInactiveSec</span>： 定时器上次关闭后多少时间，再次执行<br><span class=\"hljs-attribute\">OnCalendar</span>：基于绝对时间，而不是相对时间执行<br><span class=\"hljs-attribute\">AccuracySec</span>：如果因为各种原因，任务必须推迟执行，推迟的最大秒数，默认是<span class=\"hljs-number\">60</span>秒<br><span class=\"hljs-attribute\">Unit</span>：真正要执行的任务，默认是同名的带有.service后缀的单元<br><span class=\"hljs-attribute\">Persistent</span>：如果设置了该字段，即使定时器到时没有启动，也会自动执行相应的单元<br><span class=\"hljs-attribute\">WakeSystem</span>：如果系统休眠，是否自动唤醒系统<br></code></pre></td></tr></table></figure>\n\n<p>上面的脚本里面，<code>OnCalendar=*-*-* 02:00:00</code> 表示每天凌晨两点执行一次任务。其他的写法还有<code>OnUnitActiveSec=Mon *-*-* 02:00:00</code>表示每周一凌晨两点执行。</p>\n<h2 id=\"Install-和-target\"><a href=\"#Install-和-target\" class=\"headerlink\" title=\"[Install] 和 target\"></a>[Install] 和 target</h2><p><code>backup.timer</code>文件里面，还有一个<code>[Install]</code>部分，定义开机自启动（<code>systemctl enable</code>）和关闭开机自启动（<code>systemctl disable</code>）这个单元时，所要执行的命令。</p>\n<p>上面脚本中，<code>[Install]</code>部分只写了一个字段，即<code>WantedBy=multi-user.target</code>。它的意思是，如果执行了<code>systemctl enable backup.timer</code>（只要开机，定时器自动生效），那么该定时器归属于<code>multi-user.target</code>。</p>\n<p>所谓 Target 指的是一组相关进程，有点像 init 进程模式下面的启动级别。启动某个Target 的时候，属于这个 Target 的所有进程都会全部启动。</p>\n<p><code>multi-user.target</code>是一个最常用的 Target，意为多用户模式。也就是说，当系统以多用户模式启动时，就会一起启动<code>backup.timer</code>。它背后的操作其实很简单，执行<code>systemctl enable backup.timer</code>命令时，就会在<code>multi-user.target.wants</code>目录里面创建一个符号链接，指向<code>backup.timer</code>。</p>\n<h2 id=\"定时器相关命令\"><a href=\"#定时器相关命令\" class=\"headerlink\" title=\"定时器相关命令\"></a>定时器相关命令</h2><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\">systemctl start <span class=\"hljs-keyword\">backup.timer </span> <span class=\"hljs-comment\">#启动定时器</span><br><br>systemctl status <span class=\"hljs-keyword\">backup.timer </span><span class=\"hljs-comment\">#查看定时器状态</span><br><br>systemctl enable <span class=\"hljs-keyword\">backup.timer </span> <span class=\"hljs-comment\">#设置开机自启</span><br></code></pre></td></tr></table></figure>\n\n<p>定时器的操作和<code>service</code>是一样的，不需要过多介绍。</p>\n<p><strong>参考链接：</strong>  <a href=\"http://www.ruanyifeng.com/blog/2018/03/systemd-timer.html\">http://www.ruanyifeng.com/blog/2018/03/systemd-timer.html</a></p>\n<h2 id=\"效果图：\"><a href=\"#效果图：\" class=\"headerlink\" title=\"效果图：\"></a>效果图：</h2><p><img  src=\"https://i.loli.net/2021/02/08/26utcsbTW73HVDf.jpg\"  ><span class=\"image-caption\">效果图</span></p>\n",
            "tags": [
                "Python"
            ]
        }
    ]
}